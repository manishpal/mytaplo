<button class="hide" id="key-data">token {{apiKey}}:{{tickerToken}}</button>
<div class="container secPdng animated">
    <div class="col-sm-6">
        <span class="h3">Portfolio Summary </span>
        <ul class="cartTable">
            <li class="cartHead clearfix">
                <div class="col-sm-3">Instrument</div>
                <div class="col-sm-2">Quantity</div>
                <div class="col-sm-2">Price</div>
                <div class="col-sm-2">LTP</div>
                <div class="col-sm-3">Profit/Loss</div>                
            </li>
            <li class="singleIteam clearfix">
                {{#unless hasPosition}}
                <div class="col-sm-12 center">
                    No hedge placed yet.
                </div>
                {{/unless}}
                {{#if hasPosition}}
                    {{#each positions}}
                        <div class="col-sm-3 tradingsymbol">{{tradingsymbol}}</div>
                        <div class="col-sm-2">{{quantity}}000</div>
                        <div class="col-sm-2">{{average_price}}</div>
                        <div class="col-sm-2 {{tradingsymbol}}" id="{{tradingsymbol}}-ltp">{{last_price}}</div>
                        <div class="col-sm-3 pnl" id="{{tradingsymbol}}-position" data-quantity="{{quantity}}000" data-cost="{{average_price}}" 
                         data-ltp-target="{{tradingsymbol}}-ltp">-</div> 
                    {{/each}}
                {{/if}}
            </li>
        </ul>
    </div>
    <div class="col-sm-6">
        <span class="h3">Live Locking Rates </span>
        <span class="duration">
            <span class="lock-rates" id="">Income</span>
                <ul class="cartOpt">
                    <li class="lock-rate-prices" data-code="Income" data-price="$10">Income</li>
                    <li class="lock-rate-prices" data-code="Expense" data-price="$15">Expense</li>
                </ul>
        </span>

        <ul class="cartTable">
            <li class="cartHead clearfix">
                <div class="col-sm-3">Month</div>
                <div class="col-sm-3">USD</div>
                <div class="col-sm-3">EUR</div>
                <div class="col-sm-3">GBP</div>                
            </li>

            {{#each months}}
                <li class="singleIteam clearfix category-host">
                    <div class="col-sm-3">{{name}}</div>
                    {{#each instruments}}
                        <div class="col-sm-3 prices ltp-price {{code}} hide">{{price}}</div>
                        <div class="col-sm-3 prices buy-price {{code}}-buy-price">{{buy_price}}</div>
                        <div class="col-sm-3 prices sell-price {{code}}-sell-price hide">{{sell_price}}</div>
                    {{/each}}
                </li>
            {{/each}}
        </ul>
    </div>
	<div class="col-sm-12 transactions-table">
	<span class="h3">Payments</span>

	<ul class="cartTable">
    					<li class="cartHead clearfix">
    						<div class="col-sm-2">currency</div>
    						<div class="col-sm-2">amount</div>
    						<div class="col-sm-3">Income/Expense</div>
    						<div class="col-sm-3">Date</div>
    						<div class="col-sm-2">Action</div>
    					</li>
                        {{#each transactions}}
    					<li class="singleIteam clearfix category-host {{#unless this.hedged}}unhedged{{/unless}}" data-time="{{getTime this.transactionDate}}" id="{{this.id}}"> 
    						<div class="col-sm-2">
    							{{this.currency}}
    						</div>
    						<div class="col-sm-2">
    							{{this.amount}}
    						</div>

    						<div class="col-sm-3">
                                {{#if this.credit}}
                                   Income
                                {{/if}}
    							{{#unless this.credit}}
                                  Expense
                                {{/unless}}
    						</div>
    						<div class="col-sm-3">
    							{{uppercase (formatTime transactionDate)}}
    						</div>

    						<div class="col-sm-2">
    							<a href="#" class="remove_transaction" data-status="{{this.status}}" data-time="{{getTime this.transactionDate}}" data-credit="{{this.credit}}" data-currency="{{this.currency}}" data-amount="{{this.amount}}" data-id="{{this.id}}">
                                    {{#ifCond this.status 'pending'}}
                                        Remove
                                    {{/ifCond}}

                                    {{#unlessCond this.status 'pending'}}
                                        {{#if this.credit}}
                                            Payment Received
                                        {{/if}}

                                        {{#unless this.credit}}
                                            Expense Paid
                                        {{/unless}}
                                    {{/unlessCond}}
                                    
                                </a>
    						</div>
    					</li>
                        {{/each}}
    					
    					<li class="coupon clearfix">
    						<form action="#" class="couponForm">
    							<div class="col-sm-2 dropdowncell">
	    							<div class="duration">
		    							<span id="currencyVal">USD</span>
		    							<ul class="cartOpt">
		    								<li data-code="USD" data-price="$10">USD</li>
		    								<li data-code="GBP" data-price="$15">GBP</li>
		    								<li data-code="EUR" data-price="$30">EUR</li>
		    							</ul>
	    							</div>
    							</div>
    							<div class="col-sm-3">
    								<input type="text" id="amountVal" placeholder="Amount">
    							</div>
    							<div class="col-sm-2 dropdowncell">
	    							<div class="duration">
		    							<span id="creditVal">Select</span>
		    							<ul class="cartOpt">
		    								<li data-code="Income" data-price="$10">Income</li>
		    								<li data-code="Expense" data-price="$15">Expense</li>
		    							</ul>
	    							</div>
    							</div>
    							
    							<div class="col-sm-3">
    								<input type="text" id="dateVal" placeholder="Date" class="datepicker" />
    							</div>

    							<div class="col-sm-2">
    								<button id="add_transaction" type="submit">Add payment</button>
    							</div>
    						</form>
    					</li>
    				</ul>
	</div>
     <div class="col-sm-12 place-hedge">
        <button id="place_order" class="Btn"> Place Hedge</button>
    </div>

    <button id="custom-button" style="display:none">WTF</button>

</div>


<script type="text/javascript">

        function updateTicker() {
            var query_string = "{{queryString}}";
            $.ajax({
                url : "/dashboard/livePrices",
                contentType : 'application/json'
            }).done(function(resp){
                console.log("got resp", resp);
                if(resp.status === "Success"){
                    var data = resp.results.data;
                    for(var k=0;k<data.length;k++){
                        var currData = data[k];
                        for(var j=0;j<currData.instruments.length;j++){
                            var code = currData.instruments[j].code;
                            var price = currData.instruments[j].price;
                            var buy_price = currData.instruments[j].buy_price;
                            var sell_price = currData.instruments[j].sell_price;
                            $('.'+code).html(price+"");
                            $('.'+code+'-buy-price').html(buy_price+"");
                            $('.'+code+'-sell-price').html(sell_price+"");
                            
                            $('.pnl').each(function(){
                                var cost = parseFloat($(this).attr("data-cost"));
                                var ltpElem = '#'+$(this).attr("data-ltp-target");
                                //console.log('ltp elem', ltpElem, $(this).attr("data-ltp-target"));
                                var ltpvalue = $(ltpElem).html().trim();
                                var ltp = parseFloat(ltpvalue);
                                var quantity = parseInt($(this).attr("data-quantity"));
                                $(this).html(Number((quantity*(ltp-cost)).toFixed(4))+"");
                            })
                        }
                    }
                }
            }).always(function(){
                setTimeout(updateTicker, 5000);
            }).fail(function(){
                window.location.href = window.location.origin + '/login';
            });
        }

        function addTransactionRemoveListener() {
            $('.remove_transaction').click(function(){

                var status = $(this).attr('data-status');
                if(status === 'pending'){
                     var transactionId = $(this).attr("data-id");
                    var elem = $('#'+transactionId);
                    $.ajax({
                        url : '/transactions/remove',
                        type : 'POST',
                        dataType : 'json',
                        contentType: "application/json",
                        data: JSON.stringify({id : transactionId})
                    }).done(function(resp){
                        console.log("got response", resp);
                        if(resp.status === "Success"){
                            $(elem).remove();
                        }
                    });
                    return false;
                }

                $('#amountVal').val($(this).attr('data-amount'));
                var date = new Date(new Number($(this).attr('data-time')));
                var year = date.getFullYear();
                var month = date.getMonth()+1;
                var day = date.getDate();

                if (day < 10) {
                    day = '0' + day;
                }
                if (month < 10) {
                    month = '0' + month;
                }

                $('#dateVal').val(month+'/'+day+'/'+year); 
                var credit = $(this).attr("data-credit");
                if(credit === "true")
                    $('#creditVal').html('Expense');
                else
                    $('#creditVal').html('Income');
                
                $('#currencyVal').html($(this).attr("data-currency"));               

                return false;
            });
        };


        function updatePortfolio(){
                $.ajax({
                    url : '/transactions/updatePositions',
                    type : 'POST',
                    dataType : 'json',
                    contentType: "application/json",
                    data: JSON.stringify({})
                }).done(function(resp){
                    console.log("got response", resp);
                    if(resp.status === "Success"){
                        window.location.href=window.location.origin + '/dashboard';
                    }
                });
        }


        function addTransactionRow(data) {
            var templateString = `<li class="singleIteam clearfix category-host unhedged" data-time="DATA_TIME"> 
                            <div class="col-sm-2">
                                DATA_CURRENCY
                            </div>
                            <div class="col-sm-2">
                                DATA_AMOUNT
                            </div>

                            <div class="col-sm-3">
                                DATA_CREDIT
                            </div>
                            <div class="col-sm-3">
                                DATA_DATE
                            </div>

                            <div class="col-sm-2">
                                <a href="#" class="remove_transaction" data-status="DATA_STATUS" data-time="DATA_TIME" data-credit="DATA_CREDIT_BOOL" data-currency="DATA_CURRENCY" data-amount="DATA_AMOUNT" data-id="DATA_ID">ACTION_TEXT</a>
                            </div>
                        </li>

            `;

            templateString = templateString.replace(/DATA_CURRENCY/g, data.currency);
            templateString = templateString.replace(/DATA_AMOUNT/g, data.amount);
            templateString = templateString.replace("DATA_CREDIT_BOOL", data.credit? 'true' : 'false');
            templateString = templateString.replace(/DATA_CREDIT/g, data.credit? 'Income' : 'Expense');
            templateString = templateString.replace(/DATA_STATUS/g, data.status);

            var date = new Date(data.transactionDate);

            templateString = templateString.replace(/DATA_TIME/g, date.getTime());

            var monthNames = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN",
                                "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"
                                ];

            var year = date.getFullYear();
            var month = date.getMonth();
            var day = date.getDate();

            if (day < 10) {
              day = '0' + day;
            }
            var formattedDate = day + ' - ' + monthNames[month] + ' - ' + year;

            templateString = templateString.replace("DATA_DATE", formattedDate);
            var actionText = 'Remove';
            if(data.status !== 'pending'){
                actionText = data.credit? 'Payment Received' : 'Expense Paid';
            }

            templateString = templateString.replace("ACTION_TEXT", actionText);
            templateString = templateString.replace("DATA_ID", data.id);
            $(templateString).insertBefore('.coupon');

            $('#dateVal').val('');
            $('#amountVal').val('');

            addTransactionRemoveListener();



        }
  
        $(document).ready(function(){

            setTimeout(updateTicker, 1000);

            addTransactionRemoveListener();

            $('.lock-rate-prices').click(function(){
                var val = $(this).attr('data-code');
                $('.prices').hide();
                if(val == "Income"){ 
                    $('.buy-price').show();
                    $('.buy-price').removeClass('hide');                   
                }else{
                    $('.sell-price').show();
                    $('.sell-price').removeClass('hide');   
                }
            })

            $('#add_transaction').click(function(){
                $.ajax({
                    url : '/transactions/add',
                    type : 'POST',
                    dataType : 'json',
                    contentType: "application/json",
                    data: JSON.stringify({
                        currency: $('#currencyVal').html().trim(),
                        amount : parseInt($('#amountVal').val()),
                        credit : $('#creditVal').html().trim() == 'Income',
                        transactionDate : $('#dateVal').val()
                    })
                }).done(function(resp){
                    console.log("got response", resp);
                    if(resp.status === "Success"){
                        addTransactionRow(resp.results.data);
                    }
                });
                return false;
            });


            $('#place_order').click(function(){

                KiteConnect.ready(function(){
                    var kite = new KiteConnect("{{apiKey}}");
                    var transactions = $('.unhedged');
                    var i=0;
                    var currencyMap = { };
                    var currTime = new Date();
                    for(i=0;i<transactions.length;i++){
                        var time = $(transactions[i]).attr("data-time");
                        if(time > ""+currTime.getTime()){
                            var divElems = $(transactions[i]).find('div');
                            var currency = $(divElems[0]).html().trim();
                            var amount = $(divElems[1]).html().trim();
                            var credit = $(divElems[2]).html().trim();
                            var month = $(divElems[3]).html().trim();
                            var year = month.substring(month.length, month.length - 2);
                            month = month.replace(/[0-9]/g, "");
                            month = month.replace(/-/g, "");
                            month = month.replace(/ /g, "");
                            if(credit === 'Expense')
                                amount = '-' + amount;

                            var futName = currency+'INR' + year + month + 'FUT';

                            currencyMap[futName] = currencyMap[futName] || 0;
                            currencyMap[futName] += parseInt(amount);
                            
                        }
                    }
                    console.log("currency map", currencyMap);

                    var transactionsAdded = false;
                    for (var futName in currencyMap){
                        currencyMap[futName] = currencyMap[futName] || 0;

                        if($('#'+futName+'-position').length > 0)
                            currencyMap[futName] += parseInt($('#'+futName+'-position').attr("data-quantity"));

                        var quantity = Math.floor(Math.abs(currencyMap[futName])/1000);

                        console.log("got quantiti", quantity, currencyMap[futName]);
                        
                        var buy = currencyMap[futName] > 0 ? "SELL" : "BUY";
                        if(quantity === 0)
                            continue;

                        transactionsAdded = true;

                        var orderObject = {
                            "variety": "regular",
                            "exchange": "CDS",
                            "product" : "NRML",
                            "tradingsymbol": futName,
                            "quantity": quantity,
                            "transaction_type": buy,
                            "order_type": "MARKET"
                        };
                        console.log("orderObject added", orderObject);
                        kite.add(orderObject);
                    }

                    if(transactionsAdded){
                        console.log("transactions Added");

                        kite.finished(function(status, request_token){
                            console.log("request finished", status, request_token);
                            // We should call api here for updating portfolio;
                            updatePortfolio();

                        });   

                        kite.link("#custom-button");

                        console.log("added items", kite.get());
                        $('#custom-button').click();
                    }else{
                        window.alert("No hedge needs to be placed ");
                    }



                });

            });
        
        });
	
</script>